diff a/after-init.el b/after-init.el	(rejected hunks)
@@ -2105,94 +2105,58 @@ I.e., created with `scratch' or named scratch-"
   :defer t)
 
 (use-package casual
   :bind ("C-o" . #'casual-editkit-main-tmenu)
   :init
   (use-package casual-dired :ensure casual
     :commands (casual-dired-sort-by-tmenu
                casual-dired-search-replace-tmenu))
   (use-package casual-ibuffer :ensure casual
     :commands (casual-ibuffer-filter-tmenu
-
-(if-let* (((fboundp 'package-vc-install-from-checkout))
-          (workspace (or (getenv "GITHUB_WORKSPACE")
-                         (getenv "HOME"))))
-    (dolist
-        (spec `(;; ("jinx"
-                ;;  . ,(file-name-concat workspace "gh" "minad" "jinx"))
-                ("difftastic"
-                 . ,(file-name-concat workspace "gh" "pkryger" "difftastic.el"))
-                ("basic-stats"
-                 . ,(file-name-concat workspace "gh" "pkryger" "basic-stats"))
-                ("emacs-toml"
-                 . ,(file-name-concat workspace "gh" "gongo" "emacs-toml"))
-                ("ultra-scroll-mac"
-                 . ,(file-name-concat workspace "gh" "jdtsmith" "ultra-scroll-mac"))))
-      (when-let* ((dir (cdr spec))
-                  ((file-exists-p dir))
-                  (name (car spec))
-                  (pkg-dir (expand-file-name name package-user-dir)))
-        (message "Using checked out %s package at %s" name dir)
-        (when-let* ((pkg-desc (cadr (assq (intern name) package-alist)))
-                    ((not (eq 'vc (package-desc-kind pkg-desc)))))
-          (package-delete pkg-desc)
-          ;; after uninstall: remove from `load-path'
-          (setq load-path (seq-remove
-                           (lambda (dir)
-                             (string= dir (package-desc-dir pkg-desc)))
-                           load-path)))
-        ;; `package-vc-install-from-checkout' complains when the symlink exists
-        (when (file-exists-p pkg-dir)
-          (delete-file pkg-dir))
-        (package-vc-install-from-checkout dir name)))
-  (message "Skipping installation of packages from repositories: %s"
-           (if (fboundp 'package-vc-install-from-checkout)
-               "no workspace"
-             "no `package-vc-install-from-checkout'")))
                casual-ibuffer-sortby-tmenu))
   (use-package casual-isearch :ensure casual
     :commands (casual-isearch-tmenu))
 
   (use-package org-agenda :ensure org
     :autoload (org-agenda-clock-goto)
     :bind (:map org-agenda-mode-map
            ("C-o" . #'casual-agenda-tmenu)
            ("M-j" . #'org-agenda-clock-goto)
            ("J" . #'bookmark-jump)))
   (use-package bookmark :ensure nil
     :bind (:map bookmark-bmenu-mode-map
            ("C-o" .  #'casual-bookmarks-tmenu)
            ("J" . #'bookmark-jump)))
   (use-package calc :ensure nil
     :bind (:map calc-mode-map
            ("C-o" . #'casual-calc-tmenu)))
   (use-package calc-ext :ensure nil
     :bind (:map calc-alg-map
            ("C-o" . #'casual-calc-tmenu)))
   (use-package calendar :ensure nil
     :bind (:map calendar-mode-map
            ("C-o" . #'casual-calendar)))
   (use-package dired :ensure nil
     :bind (:map dired-mode-map
            ("C-o" . #'casual-dired-tmenu)
            ("s" . #'casual-dired-sort-by-tmenu)
            ("/" . #'casual-dired-search-replace-tmenu)))
   (use-package ibuffer :ensure nil
     :bind (:map ibuffer-mode-map
            ("C-o" . #'casual-ibuffer-tmenu)
            ("F" . #'casual-ibuffer-filter-tmenu)
            ("s".  #'casual-ibuffer-sortby-tmenu)))
   (use-package info :ensure nil
     :bind (:map Info-mode-map
            ("C-o" . #'casual-info-tmenu)))
   (use-package isearch :ensure nil
     :bind (:map isearch-mode-map
            ("C-o" . #'casual-isearch-tmenu)))
   (use-package re-builder :ensure nil
     :bind (:map reb-mode-map
            ("C-o". casual-re-builder-tmenu)
            :map reb-lisp-mode-map
            ("C-o" . casual-re-builder-tmenu))))
 
 
 (use-package difftastic
   :init
